plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 34

    defaultConfig {
        applicationId "com.exa.companydemo"
//        applicationId "com.exa.toasttest"
//        applicationId "com.exa.locationtest"
//        applicationId "com.raite.gallery"
//        applicationId "com.gxatek.cockpit.launcher"
//        applicationId "space.syncore.cockpit.soundeffect"

        minSdk 26
        targetSdk 34
        versionCode 999999
        versionName getVersionN()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storePassword 'android'
            keyPassword 'android'
            keyAlias 'android'
            storeFile file(rootProject.ext.android.path)
        }
    }

    //高版本的不用配，默认会使用signingConfigs的签名配置
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    buildFeatures {
        dataBinding = true
        // for view binding
        // 根View tools:viewBindingIgnore="true" 禁用viewBinding
        viewBinding = true  //for id 'kotlin-parcelize'
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/java-gen', 'src/main/aidl']
            jniLibs.srcDirs = ['libs']
            aidl.srcDirs = ['src/main/aidl']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFileName = "shihuademo.apk"
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}


static String getVersionN() {
    return new Date().format("yyyyMMdd_HHmm")
}

dependencies {
    implementation project(path: ':base')
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation files('libs/scenemanager.jar')
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation files('libs\\android_car.jar')
    implementation files('libs\\framework-wifi.jar')
    compileOnly files('libs\\Car-Framework.jar')
    compileOnly files('libs\\SettingsLib.jar')
    implementation files('libs\\services.core.jar')
//    compileOnly files('libs/framework.jar')
    compileOnly files('libs/framework-minus-apex.jar')
    implementation files('libs/carlocalupdatesdk.jar')
    implementation files('libs/recorderlib.aar')
    implementation files('libs/carotasdk.jar')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}