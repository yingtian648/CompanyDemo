import java.nio.file.Files
import java.nio.file.StandardCopyOption

// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '7.2.1' apply false
    id 'com.android.library' version '7.2.1' apply false
    id 'org.jetbrains.kotlin.android' version '1.7.10' apply false
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

apply from: "config.gradle"

afterEvaluate {
    // 参考：https://blog.csdn.net/yechaoa/article/details/131368728
    // 提供 编译集成相关的任务
    tasks.create(name: "App_Debug") {
        dependsOn = [":app:assembleDebug"]
        doLast {
            var fromFile = "app/build/outputs/apk/debug/shihuademo.apk"
            var outFile = "shihuademo.apk"
            Files.copy(
                    java.nio.file.Path.of(project.rootDir.absolutePath, fromFile),
                    // 拷贝到根目录
                    java.nio.file.Path.of(project.rootDir.absolutePath, outFile),
                    StandardCopyOption.REPLACE_EXISTING
            )

            Runtime runtime = Runtime.getRuntime()
            String cmd = "adb install -r shihuademo.apk"
            Process process = runtime.exec(cmd)
            System.println("install-result:" + (process.waitFor()==0?"success":"failed!"))
        }
    }

    tasks.create(name: "App_Release") {
        dependsOn = [":app:assembleRelease"]
        doLast {
            var fromFile = "app/build/outputs/apk/debug/shihuademo.apk"
            var outFile = "${rootProject.name}_release.apk"
            Files.copy(
                    java.nio.file.Path.of(project.rootDir.absolutePath, fromFile),
                    java.nio.file.Path.of(project.rootDir.absolutePath, outFile),
                    StandardCopyOption.REPLACE_EXISTING
            )
        }
    }

    tasks.create(name: "App_Build_All") {
        dependsOn = ["AppDebug", "AppRelease"]
    }

    tasks.register("install-app-debug"){
        configure{
            group = "install"
            description("安装app模块的debug版app")
        }
        doLast{
            Runtime runtime = Runtime.getRuntime()
            String cmd = "adb install -r shihuademo.apk"
            Process process = runtime.exec(cmd)
            int result = process.waitFor()
            System.println("install-result:" + (result==0?"success":"failed!"))
        }
        doLast{
            Runtime runtime = Runtime.getRuntime()
            String startCmd = "adb shell am start com.exa.companydemo/.MainActivity"
            Process process = runtime.exec(startCmd)
            int result = process.waitFor()
            System.println("start-app-result:" + (result==0?"success":"failed!"))
        }
    }
}